// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ankur22/medium-picker/internal/service (interfaces: MediumSourceStorer)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	store "github.com/ankur22/medium-picker/internal/store"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMediumSourceStorer is a mock of MediumSourceStorer interface
type MockMediumSourceStorer struct {
	ctrl     *gomock.Controller
	recorder *MockMediumSourceStorerMockRecorder
}

// MockMediumSourceStorerMockRecorder is the mock recorder for MockMediumSourceStorer
type MockMediumSourceStorerMockRecorder struct {
	mock *MockMediumSourceStorer
}

// NewMockMediumSourceStorer creates a new mock instance
func NewMockMediumSourceStorer(ctrl *gomock.Controller) *MockMediumSourceStorer {
	mock := &MockMediumSourceStorer{ctrl: ctrl}
	mock.recorder = &MockMediumSourceStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMediumSourceStorer) EXPECT() *MockMediumSourceStorerMockRecorder {
	return m.recorder
}

// GetAllSourceData mocks base method
func (m *MockMediumSourceStorer) GetAllSourceData(arg0 context.Context, arg1 string, arg2 int) ([]store.Medium, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllSourceData", arg0, arg1, arg2)
	ret0, _ := ret[0].([]store.Medium)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllSourceData indicates an expected call of GetAllSourceData
func (mr *MockMediumSourceStorerMockRecorder) GetAllSourceData(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllSourceData", reflect.TypeOf((*MockMediumSourceStorer)(nil).GetAllSourceData), arg0, arg1, arg2)
}

// UpdateSource mocks base method
func (m *MockMediumSourceStorer) UpdateSource(arg0 context.Context, arg1 string, arg2 store.Medium) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSource", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSource indicates an expected call of UpdateSource
func (mr *MockMediumSourceStorerMockRecorder) UpdateSource(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSource", reflect.TypeOf((*MockMediumSourceStorer)(nil).UpdateSource), arg0, arg1, arg2)
}
